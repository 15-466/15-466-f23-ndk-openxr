<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
  package="com.game_programming.ndk_openxr_example"
  android:installLocation="auto"
  android:versionCode="1"
  android:versionName="1.0">

  <uses-sdk
    android:minSdkVersion="29"
    android:targetSdkVersion="29" />
  <!--
  Based on the hello_xr AndroidManifest.xml:
  Copyright (c) 2017-2023, The Khronos Group Inc.
  SPDX-License-Identifier: Apache-2.0

  Changes copyright (c) 2023 Jim McCann
  -->
  <!-- Tell the system this app requires OpenGL ES 3.2. -->
  <uses-feature
    android:glEsVersion="0x00030002"
    android:required="true" />
  <!-- Tell the system this app works in either 3dof or 6dof mode -->
  <uses-feature
    android:name="android.hardware.vr.headtracking"
    android:required="false"
    android:version="1" />

  <!-- Recommended for haptic feedback -->
  <uses-permission android:name="android.permission.VIBRATE" />

  <!-- If building externally with the OpenXR loader AAR, this would be merged in automatically. -->
  <uses-permission android:name="org.khronos.openxr.permission.OPENXR" />
  <uses-permission android:name="org.khronos.openxr.permission.OPENXR_SYSTEM" />

  <queries>
    <!-- to talk to the broker -->
    <provider android:authorities="org.khronos.openxr.runtime_broker;org.khronos.openxr.system_runtime_broker" />

    <!-- so client-side code of runtime/layers can talk to their service sides -->
    <intent>
      <action android:name="org.khronos.openxr.OpenXRRuntimeService" />
    </intent>
    <intent>
      <action android:name="org.khronos.openxr.OpenXRApiLayerService" />
    </intent>
  </queries>
  <!-- end of elements normally merged from the OpenXR loader AAR -->

  <application
    android:allowBackup="true"
    android:hasCode="false"
    android:icon="@mipmap/gp-icon"
    android:label="gp23 openxr example"
    android:roundIcon="@mipmap/gp-icon">

   <!-- from: https://developers.meta.com/horizon/documentation/native/android/mobile-native-manifest/ -->
   <meta-data android:name="com.oculus.supportedDevices" android:value="quest|quest2|questpro|quest3"/>
   <meta-data android:name="com.oculus.intent.category.VR" android:value="vr_only"/>

    <!-- The activity is the built-in NativeActivity framework class. -->
    <!-- launchMode is set to singleTask because there should never be multiple copies of the app running. -->
    <!-- Theme.Black.NoTitleBar.Fullscreen gives solid black instead of a (bad stereoscopic) gradient on app transition. -->
    <activity
      android:name="android.app.NativeActivity"
      android:configChanges="screenSize|screenLayout|orientation|keyboardHidden|keyboard|navigation|uiMode"
      android:excludeFromRecents="false"
      android:launchMode="singleTask"
      android:resizeableActivity="false"
      android:screenOrientation="landscape"
      android:theme="@android:style/Theme.Black.NoTitleBar.Fullscreen"
      android:exported="true" >
      <!-- Tell NativeActivity the name of the .so -->
      <meta-data
        android:name="android.app.lib_name"
        android:value="game" />
      <!-- This filter lets the apk show up as a launchable icon. -->
      <intent-filter>
        <action android:name="android.intent.action.MAIN" />
        <category android:name="android.intent.category.LAUNCHER" />
        <category android:name="org.khronos.openxr.intent.category.IMMERSIVE_HMD" />
      </intent-filter>
    </activity>
  </application>
</manifest>
